services:
  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - "./proxy:/app"
      - "/app/node_modules"
    environment:
      - DEBUG=proxy:*
    command: pnpm dev
    networks:
      - default

  user:
    build:
      context: ./user
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - "./user:/app"
      - "/app/node_modules"
    environment:
      - DEBUG=user:*
    depends_on:
      - user_db
    command: pnpm dev
    env_file:
      - ./user/.env
    networks:
      default:
        aliases:
          - user
          - user_db # ✅ Important pour que Prisma atteigne `user_db:5432`

  user_db:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_PASSWORD=userdb
      - POSTGRES_USER=userdb
      - POSTGRES_DB=userdb
    volumes:
      - user_db_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      default:
        aliases:
          - user_db # ✅ Important pour la résolution DNS

  posts:
    build:
      context: ./posts
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    volumes:
      - "./posts:/app"
      - "/app/node_modules"
    environment:
      - DEBUG=posts:*
    depends_on:
      - posts_db
    command: pnpm dev
    networks:
      default:
        aliases:
          - posts
          - posts_db # utile si tu veux y faire référence aussi dans `DATABASE_URL`

  posts_db:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_PASSWORD=postsdb
      - POSTGRES_USER=postsdb
      - POSTGRES_DB=postsdb
    volumes:
      - post_db_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      default:
        aliases:
          - posts_db # ✅ essentiel pour Prisma `DATABASE_URL` côté posts

volumes:
  user_db_data:
  post_db_data:

networks:
  default:
    name: s20e01-best-social-network_default
